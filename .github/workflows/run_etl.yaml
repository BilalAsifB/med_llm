name: Run ETL Pipeline Weekly

on:
  schedule:
    - cron: '0 0 * * 5'  # Every Friday at 00:00 UTC
  workflow_dispatch:

jobs:
  run-crawler:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.12'

      - name: Install uv
        run: pip install uv

      - name: Cache Python dependencies
        uses: actions/cache@v3
        with:
          path: ~/.cache/uv
          key: ${{ runner.os }}-uv-${{ hashFiles('apps/med_llm_offline/pyproject.toml', 'apps/med_llm_offline/uv.lock') }}
          restore-keys: ${{ runner.os }}-uv-

      - name: Install dependencies
        working-directory: apps/med_llm_offline
        run: |
          uv venv
          source .venv/bin/activate
          uv pip install -e .
          python -m playwright install

      # Grant temporary MongoDB access to this Github Action runner ip address
      - name: Get the public IP of this runner
        id: get_gh_runner_ip
        shell: bash
        run: |
          echo "ip_address=$(curl https://checkip.amazonaws.com)" >> "$GITHUB_OUTPUT"
      - name: Setup MongoDB Atlas cli
        uses: mongodb/atlas-github-action@v0.2.0
      - name: Add runner IP to MongoDB access list
        shell: bash
        run: |
          atlas accessLists create ${{ steps.get_gh_runner_ip.outputs.ip_address }} --type ipAddress --projectId ${{ env.MONGODB_ATLAS_PROJECT_ID }} --comment  "Temporary access for GH Action"
      
      - name: Run ETL pipeline
        working-directory: apps/med_llm_offline
        env:
          MONGODB_URI: ${{ secrets.MONGODB_URI }}
          COMET_API_KEY: ${{ secrets.COMET_API_KEY }}
          COMET_PROJECT: ${{ secrets.COMET_PROJECT }}
          MONGODB_DATABASE_NAME: ${{ secrets.MONGODB_DATABASE_NAME }}
        run: |
          source .venv/bin/activate
          python run_etl.py

      - name: Remove GH runner IP from MongDB access list
        shell: bash
        run: |
          atlas accessLists delete ${{ steps.get_gh_runner_ip.outputs.ip_address }} --projectId ${{ env.MONGODB_ATLAS_PROJECT_ID }} --force
